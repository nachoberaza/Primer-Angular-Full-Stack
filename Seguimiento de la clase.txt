Este seguimiento es desde la seccion 6 paso 59:


    Step 59(Delete en backend):

    Para eso creo el metodo Delete en el back en el cual se buscaba byId y 
    se eliminaba el elemento del array estatico.

--->    En el caso de que pudiera eliminar devuelve un ResponseEntity que primeramente va a 
    estar vacia. Y en caso contrario, devuelve un Not Found: ResponseEntity.notFound().build() => De esta manera devuelve un error de not found

    Luego creo el metodo update y 
    

    Step 61 (Delete en Frontend):
        En este paso vemos que es el origin. En el cual permite que se pueda consultar la api 
        desde el lugar que se especifica. Por ejemplo:

---->   @CrossOrigin(origins = "*", methods= {RequestMethod.GET,RequestMethod.POST})

        Esta cabecera permite que se consulte la api desde cualquier lado y aclarandole los metodos.


    Step 63 (Update service backend):
        En el backend se creo un metodo para devolver todos los detalles de una tarea indicada mediante
        el Id


     Step 65 (Put en el backend):
	Creo el metodo saveTodo mapeado con el PUT, en donde eliminaba el Todo que tuviera el mismo Id y agregaba el modificado

     Step 72 (Spring Security):
	En este metodo se agrego una nueva dependencia para la seguridad la cual se llama "spring-boot-starter-security"

	Para configurar el usuario y la contrase√±a de spring:
		-agregar en el archivo application.properties lo siguiente:
			
			spring.security.user.name=<nombre de usuario>
			spring.security.user.password=<password>


		-Entrar en la clase "webSecurityConfigureAdapter.class" (en el metodo configure(HttpSecurity) ):
			copiamos el contenido de esa funcion para pegarlo en una nueva clase que creamos en nuestro proyecto, preferentemente llamada SpringSecurityConfigurationBasicAuth,
			en la cual vamos a extender a "WebSecurityConfigurerAdapter" .  Luego agregamos a la clase las notaciones:
			
			"@Configuration"  y  "@EnableWebSecurity"
			
			Y al metodo que pegamos le agregamos "@Override"  y le agregamos ".csrf().disable()", ".antMatchers(HttpMethod.OPTIONS,"/**").permitAll()".
			Por ultimo, se puede comentar ".formLogin().and()"
	 

			
