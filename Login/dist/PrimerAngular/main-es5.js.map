{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bienvenido/bienvenido.component.ts","webpack:///src/app/bienvenido/bienvenido.component.html","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/list-todos/Todo.ts","webpack:///src/app/list-todos/list-todos.component.ts","webpack:///src/app/list-todos/list-todos.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/service/data/todo-data.service.ts","webpack:///src/app/service/data/welcome-data.service.ts","webpack:///src/app/service/hardcode-authentication.service.ts","webpack:///src/app/service/route-guard.service.ts","webpack:///src/app/todo/todo.component.ts","webpack:///src/app/todo/todo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BienvenidoComponent","route","service","name","executeHelloWorldServiceWithPathVariable","subscribe","response","handleSuccessfullResponse","error","handleErrorResponse","console","log","executeHelloWorldBeanService","message","welcomeMessageFromService","snapshot","params","getWelcomeMessageWithParameters","ErrorComponent","errorMessage","FooterComponent","Todo","description","done","targetDate","ListTodosComponent","router","deleteTodo","refreshTodos","navigate","retrieveAllTodos","todos","addTodo","LoginComponent","hardcodeAuthenticationService","username","password","InvalidCredential","authenticate","handleLogin","LogoutComponent","logout","MenuComponent","authentication","TodoDataService","http","host","get","todo","put","post","providedIn","WelcomeDataService","HardcodeAuthenticationService","indicador","isUserLoggedIn","sessionStorage","setItem","user","getItem","removeItem","RouteGuardService","codeAuthentication","state","TodoComponent","TodoService","createTodo","data","updateTodo","Date","retrieveTodo","saveTodo","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {ErrorComponent} from './error/error.component';\nimport { BienvenidoComponent } from \"./bienvenido/bienvenido.component\";\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport {LogoutComponent} from \"./logout/logout.component\";\nimport { RouteGuardService } from './service/route-guard.service';\nimport { TodoComponent } from './todo/todo.component';\n\n\nconst routes: Routes = [\n  {path:'', component:LoginComponent},\n  {path:'login', component:LoginComponent},\n  {path:'logout', component:LogoutComponent, canActivate:[RouteGuardService]},\n  {path:'bienvenido/:name', component:BienvenidoComponent,canActivate:[RouteGuardService]},\n  {path:'todos', component:ListTodosComponent,canActivate:[RouteGuardService]},  \n  {path:'todos/:id', component:TodoComponent,canActivate:[RouteGuardService]},  \n  {path:'**' ,component:ErrorComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PrimerAngular';\n}\n","<div>\n  <app-menu></app-menu>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n\n  <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { BienvenidoComponent } from './bienvenido/bienvenido.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TodoComponent } from './todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ErrorComponent,\n    BienvenidoComponent,\n    ListTodosComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WelcomeDataService } from '../service/data/welcome-data.service';\n\n@Component({\n  selector: 'app-bienvenido',\n  templateUrl: './bienvenido.component.html',\n  styleUrls: ['./bienvenido.component.css']\n})\nexport class BienvenidoComponent implements OnInit {\n\n  public name:string='';\n\n  public welcomeMessageFromService:string;\n\n  constructor(private route:ActivatedRoute, private service:WelcomeDataService) {}\n\n  getWelcomeMessageWithParameters(){\n\n    this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(\n      response => this.handleSuccessfullResponse(response),\n      error => this.handleErrorResponse(error)\n    );\n\n    console.log(\"Se termino de ejecutar getWelcomeMessage\");\n  \n  }\n\n\n  getWelcomeMessage(){\n    console.log(this.service.executeHelloWorldBeanService());\n    this.service.executeHelloWorldBeanService().subscribe(\n      response=>this.handleSuccessfullResponse(response.message),\n      error=>this.handleErrorResponse(error)\n    );\n\n    console.log(\"Se termino de ejecutar getWelcomeMessage\");\n  \n  }\n\n  handleSuccessfullResponse(response){\n    this.welcomeMessageFromService=response.message;\n    //console.log(response.message);\n  }\n\n  handleErrorResponse(error){\n    this.welcomeMessageFromService=error.error.message;\n  }\n\n  ngOnInit(): void {\n    this.name=(this.route.snapshot.params['name']);\n  \n  }\n\n}\n","<h1>Welcome</h1>\n\n<div class=\"container\">\n¡¡¡Welcome {{name}}!!!!! You can manage your todos <a routerLink=\"/todos\">here</a>\n</div>\n\n\n<div class=\"container\">\n    Click here to get a customized Welcome message\n    <button (click)=\"getWelcomeMessageWithParameters()\" class=\"btn btn-success\">Get Welcome Message</button>\n</div>\n    \n\n<div class=\"container\" *ngIf=\"welcomeMessageFromService\">\n    Click here to get a customized Welcome message\n    {{welcomeMessageFromService}}\n</div>\n    \n       ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  \n  public errorMessage:string='usted ingreso mal el url';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>{{errorMessage}}</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n        <span class=\"text-muted\">All Rights Reserved 2020 @nachoberaza</span>\n    </div>\n</footer>","export class Todo {\n    constructor(\n        public id: number, \n        public description: string, \n        public done: boolean, \n        public targetDate: Date) {\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Todo } from './Todo';\nimport { TodoDataService } from '../service/data/todo-data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-todos',\n  templateUrl: './list-todos.component.html',\n  styleUrls: ['./list-todos.component.css']\n})\nexport class ListTodosComponent implements OnInit {\n\n  public todos:Todo[];\n  public message:string;\n\n  constructor(private service:TodoDataService, private router:Router) { }\n\n  deleteTodo(id){\n    this.service.deleteTodo('nachoberaza',id).subscribe(\n      response=>{\n        this.message=`Delete of Todo ${id} Succesful` \n        this.refreshTodos();\n      }\n    );\n    \n  }\n\n  updateTodo(id){\n    this.router.navigate(['todos',id]);\n  }\n\n  addTodo(){\n    this.router.navigate(['todos',-1]);\n  }\n\n  refreshTodos(){\n    this.service.retrieveAllTodos('nachoberaza').subscribe(\n      response=>{\n        console.log(response),\n        this.todos=response\n      }\n    );\n  }\n  ngOnInit(): void {\n    this.refreshTodos();\n  }\n\n}\n","<h1>My todos's</h1>\n\n<div class=\"alert alert-succes\" *ngIf='message'>{{message}}</div>\n\n<div class=\"container\">\n<table class=\"table\">\n    <thead>\n        <th>Description</th>\n        <th>Date</th>\n        <th>Is Complete</th>\n        <th>Actions</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let todo of todos\">\n            <td>{{todo.description}}</td>\n            <td>{{todo.date | date}}</td>\n            <td>{{todo.done}}</td>\n            <td><button (click)=\"deleteTodo(todo.id)\" class=\"btn btn-warning\">Delete</button></td>\n            <td><button (click)=\"updateTodo(todo.id)\" class=\"btn btn-warning\">Update</button></td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"row\">\n    <button (click)=\"addTodo()\" class=\"btn btn-success\">Add</button>\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HardcodeAuthenticationService } from '../service/hardcode-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public username:string='nachoberaza';\n  public password:string='123123';\n  public errorMessage:string='Invalid Credentials';\n  public InvalidCredential:boolean=false;\n\n  constructor(private router: Router,private hardcodeAuthenticationService:HardcodeAuthenticationService) {\n\n  }\n\n  public handleLogin():void{\n    if(this.hardcodeAuthenticationService.authenticate(this.username,this.password)){\n      this.router.navigate(['bienvenido', this.username]);\n    }else{\n      this.InvalidCredential=true\n    }\n\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Login</h1>\n\n<div class=\"container\">\n    <div class=\"alert alert-warning\" *ngIf='InvalidCredential'>{{errorMessage}}</div>\n    <div>\n        User name:<input type=\"text\" name=\"username\" [(ngModel)]=\"username\">\n        Password: <input type=\"text\" name=\"password\" [(ngModel)]=\"password\">\n        <button (click)=handleLogin() class=\"btn btn-success\">Login</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HardcodeAuthenticationService } from '../service/hardcode-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private log:HardcodeAuthenticationService) { }\n\n  ngOnInit(): void {\n    this.log.logout();\n  }\n\n}\n","<h1>You are logged out</h1>\n\n<div class=\"container\">\n    Thank you for Using Our App\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HardcodeAuthenticationService } from '../service/hardcode-authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  \n  //private isUserLoggedIn:boolean=false;\n\n  constructor(private authentication:HardcodeAuthenticationService) {\n\n  }\n\n  public getAuthentication():HardcodeAuthenticationService{\n    return this.authentication;\n  }\n\n  ngOnInit(): void {\n    //this.isUserLoggedIn=this.authentication.isUserLoggedIn();    \n  }\n\n}\n","<header>\n    <nav class=\"navbar  navbar-expand-md navbar-dark bg-dark\">\n        <div><a href=\"\" class=\"navbar-brand\">Proyecto Login</a></div>\n        <ul class=\"navbar-nav\">\n            <li><a  *ngIf=\"getAuthentication().isUserLoggedIn()\" routerLink=\"./bienvenido/nachoberaza\" class=\"nav-link\">Home</a></li>\n            <li><a *ngIf=\"getAuthentication().isUserLoggedIn()\" routerLink=\"./todos/\" class=\"nav-link\">Todos</a></li>\n        </ul>\n\n        <ul class=\"navbar-nav navbar-collapse justify-content-end\">\n            <li><a *ngIf=\"!getAuthentication().isUserLoggedIn()\" routerLink=\"./login/\" class=\"nav-link\">Login</a></li>\n            <li><a *ngIf=\"getAuthentication().isUserLoggedIn()\" routerLink=\"./logout/\" class=\"nav-link\">Logout</a></li>\n        </ul>\n    </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { Todo } from \"../../list-todos/Todo\";\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoDataService {\n\n  private host:string='192.168.0.111';\n\n  constructor(private http:HttpClient) { }\n\n  deleteTodo(username,id){\n    return this.http.delete(`http://${this.host}:8080/<Resto de la url>`);\n\n  }\n\n  retrieveAllTodos(username){  \n    return this.http.get<Todo[]>(`http://${this.host}:8080/users/${username}/todos`);  \n  }\n\n  retrieveTodo(username,id){\n    return this.http.get<Todo>(`http://${this.host}:8080/users/${username}/todos/${id}`);\n  }\n\n  updateTodo(username,id,todo){\n    return this.http.put(`http://${this.host}:8080/users/${username}/todos/${id}`,todo);\n  }  \n  \n  createTodo(username,todo){\n    return this.http.post(`http://${this.host}:8080/users/${username}/todos`,todo);\n  }\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { HelloWorldBean } from 'src/app/bienvenido/HelloWorldBean';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeDataService {\n\n  private host:string='192.168.0.111'\n\n  constructor(private http:HttpClient) { }\n\n  executeHelloWorldBeanService(){\n    return this.http.get<HelloWorldBean>(`http://${this.host}:8080/hello world-bean`);  \n  }\n\n  executeHelloWorldServiceWithPathVariable(name){  \n    return this.http.get<HelloWorldBean>(`http://${this.host}:8080/hello-world/path-variable/${name}`)\n    \n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodeAuthenticationService {\n\n  constructor() { }\n\n  authenticate(username,password):boolean{\n    let indicador:boolean=true;\n    console.log('Before '+ this.isUserLoggedIn());\n    \n    if(username===\"nachoberaza\" && password===\"123123\"){\n      sessionStorage.setItem('authenticaterUser',username);\n      console.log('After '+this.isUserLoggedIn());\n    }else{\n      indicador=false;\n    }\n\n    return indicador;\n  }\n\n  isUserLoggedIn(){\n    let user=sessionStorage.getItem('authenticaterUser');\n    return !(user===null);\n  }\n\n  logout():void{\n    sessionStorage.removeItem('authenticaterUser');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { HardcodeAuthenticationService } from './hardcode-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private codeAuthentication: HardcodeAuthenticationService, private router:Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    let indicador = false;\n\n    if (this.codeAuthentication.isUserLoggedIn()) {\n      indicador = true;\n    }else{\n      this.router.navigate(['login']);\n    }\n\n\n    return indicador;\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TodoDataService } from '../service/data/todo-data.service';\nimport { Todo } from '../list-todos/Todo';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  public id:number\n  todo:Todo;\n\n  constructor( private TodoService:TodoDataService,\n  private route:ActivatedRoute,\n  private router:Router) { }\n\n  saveTodo() {\n    if(this.id == -1) { //=== ==\n      this.TodoService.createTodo('nachoberaza', this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todos'])\n            }\n          )\n    } else {\n      this.TodoService.updateTodo('nachoberza', this.id, this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todos'])\n            }\n          )\n    }\n  }\n\n  ngOnInit(): void {\n    this.id=this.route.snapshot.params['id'];\n    this.todo=new Todo(this.id,'',false,new Date());\n    this.TodoService.retrieveTodo('nachoberaza',this.id).subscribe(\n      data=>this.todo=data\n    )\n  }\n\n}\n","<H1>Todo</H1>\n\n<div class=\"container\">\n\n    <form (ngSubmit)=\"!todoForm.invalid && saveTodo()\" #todoForm=\"ngForm\">\n\n        <fieldset class=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" \n            [(ngModel)]=\"todo.description\" \n            name=\"description\" \n            required=\"required\">\n        \n        </fieldset>\n\n        <fieldset class=\"form-group\">\n            <label>Target date</label>\n            <input type=\"date\"  \n            [(ngModel)]=\"todo.targetDate\"   <!--date:'yyyy-MM-dd'-->\n            (ngModelChange)=\"todo.targetDate=$event\" \n\n            name=\"targetDate\" required=\"required\">\n\n        </fieldset>\n\n        <button type=\"submit\" class=\"btn btn-success\">Save</button>\n    </form>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}